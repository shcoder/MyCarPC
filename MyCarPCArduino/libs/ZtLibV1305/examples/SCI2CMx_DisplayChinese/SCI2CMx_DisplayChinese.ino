/*
汉字为16*16点阵
要显示汉字则调用16x16点阵显示函数ScM1DisplayDot16x16()
ZT.ScM1DisplayDot16x16(uint8_t, uint8_t, uint8_t, const char *);
函数功能 ：在指定的地方显示16x16点阵
第1个参数：为模块的地址
第2个参数：所要显示点阵的起始页
第3个参数：所要显示点阵的起始列
第4个参数：所要先点阵的点阵数据
** Kozig 将在一个版本中增加中文字库（在模块内），直接调用内部显示函数
*/
#include <ZtLib.h>
#include <Wire.h>
#define OLED_ADDRESS    0x27

const char GB_16[] =          // 数据表
{
      0x00,0xF8,0x08,0x08,0xFC,0x88,0x40,0xB0,0x8C,0x83,0x8C,0x90,0x60,0xC0,0x40,0x00,//哈
      0x00,0x1F,0x08,0x08,0x1F,0x00,0xFC,0x44,0x44,0x44,0x44,0x44,0xFE,0x04,0x00,0x00,
      0x00,0x00,0x00,0xFE,0x92,0x92,0x92,0x92,0x92,0x92,0x92,0xFF,0x02,0x00,0x00,0x00,//显
      0x40,0x42,0x44,0x4D,0x40,0x7F,0x40,0x40,0x40,0x7F,0x40,0x49,0x44,0x66,0x40,0x00,
      0x40,0x40,0x42,0x42,0x42,0x42,0x42,0xC2,0x42,0x42,0x42,0x43,0x42,0x60,0x40,0x00,//示
      0x00,0x10,0x08,0x04,0x06,0x40,0x80,0x7F,0x00,0x00,0x02,0x04,0x0C,0x18,0x00,0x00,
      0x00,0xF8,0x08,0x08,0x08,0x08,0x08,0xFF,0x08,0x08,0x08,0x08,0x08,0xFC,0x08,0x00,//中
      0x00,0x03,0x01,0x01,0x01,0x01,0x01,0xFF,0x01,0x01,0x01,0x01,0x01,0x03,0x00,0x00,
      0x08,0x08,0x08,0x18,0x68,0x88,0x09,0x0E,0x08,0x08,0xC8,0x38,0x08,0x0C,0x08,0x00,//文
      0x80,0x80,0x40,0x40,0x20,0x11,0x0A,0x04,0x0A,0x11,0x10,0x20,0x40,0xC0,0x40,0x00 
};

void setup()
{
  ZT.I2cInit();
  ZT.ScI2cMxReset(OLED_ADDRESS);
  delay(5);//复位，重新初始化，清理缓存，需要稍稍等待
  ZT.ScI2cMxDisplayDot16x16(OLED_ADDRESS,4,10,&GB_16[0]);//哈
  ZT.ScI2cMxDisplayDot16x16(OLED_ADDRESS,4,26,&GB_16[0]);//哈
  ZT.ScI2cMxDisplayDot16x16(OLED_ADDRESS,4,42,&GB_16[32]);//显
  ZT.ScI2cMxDisplayDot16x16(OLED_ADDRESS,4,58,&GB_16[64]);//示
  ZT.ScI2cMxDisplayDot16x16(OLED_ADDRESS,4,74,&GB_16[96]);//中
  ZT.ScI2cMxDisplayDot16x16(OLED_ADDRESS,4,90,&GB_16[128]);//文
}
void loop()
{
}
